---
# Source: kube-linstor/templates/linstor-satellite.yaml

---
apiVersion: v1
data:
  drbd.conf: |+
    include "drbd.d/global_common.conf";
    include "drbd.d/*.res";

  global_common.conf: |+
    global {
     usage-count no;
     udev-always-use-vnr;
    }
    common {
     handlers {
     }
     startup {
     }
     options {
     }
     disk {
     }
     net {
     }
    }

kind: ConfigMap
metadata:
  name: linstor-satellite
  namespace: linstor
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: linstor-satellite
  namespace: linstor
spec:
  selector:
    matchLabels:
      app: linstor-satellite
  template:
    metadata:
      labels:
        app: linstor-satellite
    spec:
      containers:
      - image: kvaps/linstor-satellite:v1.1.2
        imagePullPolicy: IfNotPresent
        name: linstor-satellite
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/drbd.conf
          name: etc-drbd-conf
        - mountPath: /etc/drbd.d
          name: etc-drbd-d
        - mountPath: /var/lib/drbd
          name: var-lib-drbd
        - mountPath: /var/lib/linstor.d
          name: var-lib-linstor-d
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /dev
          name: dev
        - mountPath: /etc/lvm
          name: etc-lvm
        - mountPath: /run/lock/lvm
          name: run-lock-lvm
        - mountPath: /logs
          name: logs
        - mountPath: /run/lvm
          name: run-lvm
        - mountPath: /run/udev
          name: run-udev
      hostIPC: true
      hostNetwork: true
      hostPID: true
      imagePullSecrets:
        - name: regsecret
        
      initContainers:
      - command:
        - /bin/sh
        - -c
        - |
          cat /config/drbd.conf > /etc/drbd.conf
          cp -f /config/global_common.conf /etc/drbd.d/global_common.conf
        image: kvaps/linstor-satellite:v1.1.2
        imagePullPolicy: IfNotPresent
        name: init
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /etc/drbd.conf
          name: etc-drbd-conf
        - mountPath: /etc/drbd.d
          name: etc-drbd-d
        - mountPath: /host-bin
          name: usr-local-sbin
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      
      volumes:
      - hostPath:
          path: /etc/drbd.conf
          type: FileOrCreate
        name: etc-drbd-conf
      - hostPath:
          path: /etc/drbd.d
        name: etc-drbd-d
      - hostPath:
          path: /var/lib/drbd
        name: var-lib-drbd
      - hostPath:
          path: /var/lib/linstor.d
        name: var-lib-linstor-d
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /usr/local/sbin
        name: usr-local-sbin
      - hostPath:
          path: /dev
        name: dev
      - hostPath:
          path: /etc/lvm
        name: etc-lvm
      - hostPath:
          path: /run/lock/lvm
        name: run-lock-lvm
      - configMap:
          name: linstor-satellite
        name: config
      - hostPath:
          path: /var/log/linstor-satellite
        name: logs
      - hostPath:
          path: /run/lvm
        name: run-lvm
      - hostPath:
          path: /run/udev
        name: run-udev
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 40
    type: RollingUpdate

---
# Source: kube-linstor/templates/linstor-csi.yaml

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linstor-csi-attacher-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linstor-csi-cluster-driver-registrar-role
rules:
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csidrivers
  verbs:
  - create
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linstor-csi-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-csi-attacher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-csi-attacher-role

subjects:
- kind: ServiceAccount
  name: linstor-csi-controller-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-csi-cluster-driver-registrar-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-csi-cluster-driver-registrar-role
subjects:
- kind: ServiceAccount
  name: linstor-csi-controller-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-csi-driver-registrar-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-csi-driver-registrar-role
subjects:
- kind: ServiceAccount
  name: linstor-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-csi-provisioner-role
subjects:
- kind: ServiceAccount
  name: linstor-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linstor-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linstor-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linstor-csi-driver-registrar-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  name: linstor-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: linstor-csi-node
  template:
    metadata:
      labels:
        app: linstor-csi-node
        role: linstor-csi
    spec:
      containers:
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/linstor.csi.linbit.com /registration/linstor.csi.linbit.com-reg.sock
        name: csi-node-driver-registrar
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
        - mountPath: /registration/
          name: registration-dir
      - args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LINSTOR_IP)
        - --log-level=debug
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINSTOR_IP
          value: http://linstor-controller.linstor:3370
        image: quay.io/linbit/linstor-csi:v0.7.2
        imagePullPolicy: IfNotPresent
        name: linstor-csi-plugin
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: pods-mount-dir
        - mountPath: /dev
          name: device-dir
      imagePullSecrets:
        - name: regsecret
        
      nodeSelector:
        null
        
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      
      priorityClassName: system-node-critical
      serviceAccount: linstor-csi-node-sa
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins/linstor.csi.linbit.com/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: pods-mount-dir
      - hostPath:
          path: /dev
        name: device-dir
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: linstor-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  serviceName: linstor-csi
  template:
    metadata:
      labels:
        app: linstor-csi-controller
        role: linstor-csi
    spec:
      containers:
      - args:
        - --csi-address=$(ADDRESS)
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-provisioner:v1.2.0
        imagePullPolicy: IfNotPresent
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-attacher:v1.1.1
        imagePullPolicy: IfNotPresent
        name: csi-attacher
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=120s
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-snapshotter:v1.1.0
        imagePullPolicy: IfNotPresent
        name: csi-snapshotter
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --v=5
        - --pod-info-mount-version="v1"
        - --csi-address=$(ADDRESS)
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-cluster-driver-registrar:v1.0.1
        imagePullPolicy: IfNotPresent
        name: csi-cluster-driver-registrar
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LINSTOR_IP)
        - --log-level=debug
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINSTOR_IP
          value: http://linstor-controller.linstor:3370
        image: quay.io/linbit/linstor-csi:v0.7.2
        imagePullPolicy: IfNotPresent
        name: linstor-csi-plugin
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      imagePullSecrets:
        - name: regsecret
        
      nodeSelector:
        node-role.kubernetes.io/master: ""
        
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      
      priorityClassName: system-cluster-critical
      serviceAccount: linstor-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir

---
# Source: kube-linstor/templates/linstor-controller.yaml

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: linstor-controller
  name: linstor-controller
  namespace: linstor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: linstor-controller
  serviceName: linstor-controller
  template:
    metadata:
      labels:
        app: linstor-controller
    spec:
      containers:
      - command:
        - /tini
        - --
        - /usr/share/linstor-server/bin/Controller
        - --logs=/logs
        - --config-directory=/config
        - --rest-bind=127.0.0.1:3370
        image: kvaps/linstor-controller:v1.1.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - timeout
            - "5"
            - linstor
            - controller
            - list-properties
          initialDelaySeconds: 60
          periodSeconds: 10
        name: linstor-controller
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /logs
          name: logs
      imagePullSecrets:
        - name: regsecret
        
      initContainers:
      - command:
        - /bin/bash
        - -c
        - |-
          echo "setcfgval namespace(netcom) key(PlainConnector/bindaddress) value(127.0.0.1)
          setSecLvl secLvl(NO_SECURITY)
          shutdown" | /usr/share/linstor-server/bin/Controller -d --logs=/logs --config-directory=/config --rest-bind=127.0.0.1:3370
        image: kvaps/linstor-controller:v1.1.2
        imagePullPolicy: IfNotPresent
        name: init
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /logs
          name: logs
      nodeSelector:
        node-role.kubernetes.io/master: ""
        
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      
      volumes:
      - name: config
        secret:
          secretName: linstor-controller
      - hostPath:
          path: /var/log/linstor-controller
        name: logs
---
apiVersion: v1
data:
  linstor.toml: W2RiXQogIHVzZXIgPSAibGluc3RvciIKICBwYXNzd29yZCA9ICJoYWNrbWUiCiAgY29ubmVjdGlvbl91cmwgPSAiamRiYzpoMjovZGF0YS9saW5zdG9yZGIiCg==
kind: Secret
metadata:
  name: linstor-controller
  namespace: linstor
---
apiVersion: v1
kind: Service
metadata:
  name: linstor-controller
  namespace: linstor
spec:
  ports:
  - name: restapi
    port: 3370
    targetPort: 3370
  selector:
    app: linstor-controller

---
# Source: kube-linstor/templates/linstor-operator-crd.yaml


---
# Source: kube-linstor/templates/linstor-operator.yaml


---
# Source: kube-linstor/templates/linstor-stunnel.yaml


