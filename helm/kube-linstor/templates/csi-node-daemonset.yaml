{{- $fullName := include "linstor.fullname" . -}}
{{- if .Values.csi.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $fullName }}-csi-node
spec:
  selector:
    matchLabels:
      app: {{ $fullName }}-csi-node
      role: linstor-csi
  template:
    metadata:
      labels:
        app: {{ $fullName }}-csi-node
        role: linstor-csi
    spec:
      containers:
      - name: csi-node-driver-registrar
        image: {{ .Values.csi.image.csiNodeDriverRegistrar.repository }}:{{ .Values.csi.image.csiNodeDriverRegistrar.tag }}
        imagePullPolicy: {{ .Values.csi.image.csiNodeDriverRegistrar.pullPolicy }}
        args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/linstor.csi.linbit.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/linstor.csi.linbit.com /registration/linstor.csi.linbit.com-reg.sock
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
        - mountPath: /registration/
          name: registration-dir
      - name: linstor-csi-plugin
        image: {{ .Values.csi.image.linstorCsiPlugin.repository }}:{{ .Values.csi.image.linstorCsiPlugin.tag }}
        imagePullPolicy: {{ .Values.csi.image.linstorCsiPlugin.pullPolicy }}
        args:
        - --csi-endpoint=$(CSI_ENDPOINT)
        - --node=$(KUBE_NODE_NAME)
        - --linstor-endpoint=$(LINSTOR_IP)
        - --log-level=debug
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINSTOR_IP
          value: http://{{ $fullName }}-controller:{{ .Values.controller.port }}
        {{- if .Values.controller.ssl.enabled }}
        - name: LS_USER_CERTIFICATE
          value: /tls/tls.crt
        - name: LS_USER_KEY
          value: /tls/tls.key
        - name: LS_ROOT_CA
          value: /tls/ca.crt
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: pods-mount-dir
        - mountPath: /dev
          name: device-dir
        {{- if .Values.controller.ssl.enabled }}
        - mountPath: /tls
          name: client-tls
        {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.csi.image.pullSecrets | nindent 8 }}
      {{- with . }}
      nodeSelector:
        {{- toYaml .Values.csi.node.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.csi.node.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      priorityClassName: system-node-critical
      serviceAccount: {{ $fullName }}-csi-node-sa
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/linstor.csi.linbit.com/
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
      {{- if .Values.controller.ssl.enabled }}
      - name: client-tls
        secret:
          secretName: {{ $fullName }}-client-tls
      {{- end }}
{{- end }}
